{"filename": "contracts/contract/auction/RocketAuctionManager.sol", "patch": "@@ -142,7 +142,13 @@ contract RocketAuctionManager is RocketBase, RocketAuctionManagerInterface {\n \n     // Get the amount of claimed RPL in a lot\n     function getLotClaimedRPLAmount(uint256 _index) override public view returns (uint256) {\n-        return calcBase.mul(getLotTotalBidAmount(_index)).div(getLotCurrentPrice(_index));\n+        uint256 claimed = calcBase.mul(getLotTotalBidAmount(_index)).div(getLotCurrentPrice(_index));\n+        uint256 total = getLotTotalRPLAmount(_index);\n+        // Due to integer arithmetic, the calculated claimed amount may be slightly greater than the total\n+        if (claimed > total) {\n+            return total;\n+        }\n+        return claimed;\n     }\n \n     // Get the amount of remaining RPL in a lot\n@@ -235,6 +241,11 @@ contract RocketAuctionManager is RocketBase, RocketAuctionManagerInterface {\n         else { currentPrice = blockPrice; }\n         // Calculate RPL claim amount\n         uint256 rplAmount = calcBase.mul(bidAmount).div(currentPrice);\n+        // Due to integer arithmetic, there may be a tiny bit less than calculated\n+        uint256 allottedAmount = getAllottedRPLBalance();\n+        if (rplAmount > allottedAmount) {\n+            rplAmount = allottedAmount;\n+        }\n         // Transfer RPL to bidder\n         RocketVaultInterface rocketVault = RocketVaultInterface(getContractAddress(\"rocketVault\"));\n         rocketVault.withdrawToken(msg.sender, IERC20(getContractAddress(\"rocketTokenRPL\")), rplAmount);", "project_link": "https://github.com/MastaBook/rocketpool/commit/e6e081eae5e524b4f2d1bae4e4d713871c99d617", "solc_version": "0.8.9", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "99c32d87f6652e9eec8bec6c1c74a789e7430f4f"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "e6e081eae5e524b4f2d1bae4e4d713871c99d617"}}