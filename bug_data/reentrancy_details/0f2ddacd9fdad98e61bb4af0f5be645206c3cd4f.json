{"filename": "contracts/AnyswapV4CallProxy.sol", "patch": "@@ -25,9 +25,6 @@ contract AnyCallProxy {\n     // Delay for ownership transfer\n     uint256 constant TRANSFER_DELAY = 2 days;\n \n-    // reentrancy lock starts at 1 so it costs less overtime\n-    uint256 private _locked = 1;\n-\n     address public mpc;\n     TransferData private _transferData;\n \n@@ -88,14 +85,6 @@ contract AnyCallProxy {\n         emit UpdatePremium(0, _premium);\n     }\n \n-    /// @dev Reentrancy Guard taken from solmate https://github.com/Rari-Capital/solmate\n-    modifier nonreentrant() {\n-       require(_locked == 1); // dev: reentrancy\n-       _locked = 2;\n-       _;\n-       _locked = 1;\n-    }\n-\n     modifier onlyMPC() {\n         require(msg.sender == mpc); // dev: only MPC\n         _;\n@@ -107,7 +96,7 @@ contract AnyCallProxy {\n         uint256 totalCost = (gasUsed - gasleft()) * (tx.gasprice + _feeData.premium);\n \n         executionBudget[_from] -= totalCost;\n-        _feeData.accruedFees += totalCost;\n+        _feeData.accruedFees += uint128(totalCost);\n     }\n \n     /**\n@@ -123,7 +112,7 @@ contract AnyCallProxy {\n         bytes calldata _data,\n         address _callback,\n         uint256 _toChainID\n-    ) external nonreentrant {\n+    ) external {\n         require(!blacklist[msg.sender]); // dev: caller is blacklisted\n         require(whitelist[msg.sender][_to][_toChainID]); // dev: request denied\n \n@@ -136,38 +125,14 @@ contract AnyCallProxy {\n         bytes calldata _data,\n         address _callback,\n         uint256 _fromChainID\n-    ) external charge(_from) nonreentrant onlyMPC {\n+    ) external charge(_from) onlyMPC {\n         context = Context({sender: _from, fromChainID: _fromChainID});\n         (bool success, bytes memory result) = _to.call(_data);\n         context = Context({sender: address(0), fromChainID: 0});\n \n         emit AnyExec(_from, _to, _data, success, result, _callback, _fromChainID);\n     }\n \n-    function anyCallback(\n-        address _from,\n-        address _to,\n-        bytes calldata _data,\n-        bool _success,\n-        bytes calldata _result,\n-        address _callback,\n-        uint256 _toChainID\n-    ) external charge(_from) nonreentrant onlyMPC {\n-        (bool success, bytes memory result) = _callback.call(\n-            abi.encodeWithSignature(\n-                \"callback(address,address,bytes,bool,bytes,uint256)\",\n-                _from,\n-                _to,\n-                _data,\n-                _success,\n-                _result,\n-                _toChainID\n-            )\n-        );\n-\n-        emit AnyCallback(_from, _to, _data, _success, _result, _toChainID, success, result);\n-    }\n-\n     function deposit(address _account) external payable {\n         executionBudget[_account] += msg.value;\n         emit Deposit(_account, msg.value);\n@@ -176,13 +141,13 @@ contract AnyCallProxy {\n     function withdraw(uint256 _amount) external {\n         executionBudget[msg.sender] -= _amount;\n         emit Withdrawl(msg.sender, _amount);\n-        (bool s, bytes memory r) = msg.sender.call{value: _amount}(\"\");\n+        msg.sender.call{value: _amount}(\"\");\n     }\n \n     function withdrawAccruedFees() external {\n         uint256 fees = _feeData.accruedFees;\n         _feeData.accruedFees = 0;\n-        (bool s, bytes memory r) = mpc.call{value: fees}(\"\");\n+        mpc.call{value: fees}(\"\");\n     }\n \n     function setWhitelist(", "project_link": "https://github.com/cryptobuks1/anyswap-v1-core/commit/82632eef4d22aea645495393f9ece6e1e9edd7c5", "solc_version": "0.8.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "0f2ddacd9fdad98e61bb4af0f5be645206c3cd4f"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "82632eef4d22aea645495393f9ece6e1e9edd7c5"}}