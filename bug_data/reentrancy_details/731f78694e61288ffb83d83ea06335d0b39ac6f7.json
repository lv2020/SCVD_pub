{"filename": "contracts/lending/ttoken/TToken_V1.sol", "patch": "@@ -20,6 +20,9 @@ import {\n     ERC165Checker\n } from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n import { RolesLib } from \"../../contexts2/access-control/roles/RolesLib.sol\";\n+import {\n+    ReentryMods\n+} from \"../../contexts2/access-control/reentry/ReentryMods.sol\";\n import { NumbersLib } from \"../../shared/libraries/NumbersLib.sol\";\n \n // Storage\n@@ -29,7 +32,7 @@ import \"./token-storage.sol\" as Storage;\n  * @notice This contract represents a lending pool for an asset within Teller protocol.\n  * @author develop@teller.finance\n  */\n-contract TToken_V1 is ITToken {\n+contract TToken_V1 is ITToken, ReentryMods {\n     function() pure returns (Storage.Store storage) internal constant s =\n         Storage.store;\n \n@@ -217,6 +220,7 @@ contract TToken_V1 is ITToken {\n         external\n         override\n         notRestricted\n+        nonReentry(keccak256(\"MINT\"))\n         returns (uint256)\n     {\n         require(amount > 0, \"Teller: cannot mint 0\");\n@@ -250,7 +254,11 @@ contract TToken_V1 is ITToken {\n      * @notice Redeem supplied Teller tokens for underlying value.\n      * @param amount The amount of Teller tokens to redeem.\n      */\n-    function redeem(uint256 amount) external override {\n+    function redeem(uint256 amount)\n+        external\n+        override\n+        nonReentry(keccak256(\"REDEEM\"))\n+    {\n         require(amount > 0, \"Teller: cannot withdraw 0\");\n         require(\n             amount <= balanceOf(_msgSender()),\n@@ -277,7 +285,11 @@ contract TToken_V1 is ITToken {\n      * @notice Redeem supplied underlying value.\n      * @param amount The amount of underlying tokens to redeem.\n      */\n-    function redeemUnderlying(uint256 amount) external override {\n+    function redeemUnderlying(uint256 amount)\n+        external\n+        override\n+        nonReentry(keccak256(\"REDEEM\"))\n+    {\n         require(amount > 0, \"Teller: cannot withdraw 0\");\n         require(\n             amount <= totalUnderlyingSupply(),", "project_link": "https://github.com/teller-protocol/teller-protocol-v1/commit/9f25e42a3f2f2b3b4b4b4fab5bf81470f673659c", "solc_version": "0.5.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "731f78694e61288ffb83d83ea06335d0b39ac6f7"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "9f25e42a3f2f2b3b4b4b4fab5bf81470f673659c"}}