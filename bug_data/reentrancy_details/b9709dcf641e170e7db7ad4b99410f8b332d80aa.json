{"filename": "contracts/token/ERC20/extensions/ERC4626.sol", "patch": "@@ -93,8 +93,11 @@ abstract contract ERC4626 is ERC20, IERC4626 {\n \n         address caller = _msgSender();\n         uint256 shares = previewDeposit(assets);\n-        _mint(receiver, shares);\n+\n+        // if _asset is ERC777, transferFrom can call reenter BEFORE the transfer happens through\n+        // the tokensToSend hook, so we need to transfer before we mint to keep the invariants.\n         SafeERC20.safeTransferFrom(_asset, caller, address(this), assets);\n+        _mint(receiver, shares);\n \n         emit Deposit(caller, receiver, assets, shares);\n \n@@ -107,8 +110,11 @@ abstract contract ERC4626 is ERC20, IERC4626 {\n \n         address caller = _msgSender();\n         uint256 assets = previewMint(shares);\n-        _mint(receiver, shares);\n+\n+        // if _asset is ERC777, transferFrom can call reenter BEFORE the transfer happens through\n+        // the tokensToSend hook, so we need to transfer before we mint to keep the invariants.\n         SafeERC20.safeTransferFrom(_asset, caller, address(this), assets);\n+        _mint(receiver, shares);\n \n         emit Deposit(caller, receiver, assets, shares);\n \n@@ -130,6 +136,8 @@ abstract contract ERC4626 is ERC20, IERC4626 {\n             _spendAllowance(owner, caller, shares);\n         }\n \n+        // if _asset is ERC777, transferFrom can call reenter BEFORE the transfer happens through\n+        // the tokensReceived hook, so we need to transfer after we burn to keep the invariants.\n         _burn(owner, shares);\n         SafeERC20.safeTransfer(_asset, receiver, assets);\n \n@@ -153,6 +161,8 @@ abstract contract ERC4626 is ERC20, IERC4626 {\n             _spendAllowance(owner, caller, shares);\n         }\n \n+        // if _asset is ERC777, transferFrom can call reenter BEFORE the transfer happens through\n+        // the tokensReceived hook, so we need to transfer after we burn to keep the invariants.\n         _burn(owner, shares);\n         SafeERC20.safeTransfer(_asset, receiver, assets);\n ", "project_link": "https://github.com/Amxx/openzeppelin-contracts/commit/e59b05feb13b03a8e40e703be85c27e59a9efbda", "solc_version": "0.4.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "b9709dcf641e170e7db7ad4b99410f8b332d80aa"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "e59b05feb13b03a8e40e703be85c27e59a9efbda"}}