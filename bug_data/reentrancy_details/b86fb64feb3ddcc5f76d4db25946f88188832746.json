{"filename": "contracts/InvestorData.sol", "patch": "@@ -1,6 +1,5 @@\n // SPDX-License-Identifier: MIT\n pragma solidity ^0.4.24;\n-pragma experimental \"v0.5.0\";\n \n import \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n import \"./Invest.sol\";\n@@ -15,17 +14,18 @@ contract InvestorData is Invest {\n \n     function WithdrawInvestment(uint256 _id) public returns (bool) {\n         if (IsReadyWithdrawInvestment(_id)) {\n-            require(Investors[_id].TokensOwn > 0, \"TokensOwn changed\");\n+            uint256 temp = Investors[_id].TokensOwn;\n+            Investors[_id].TokensOwn = 0;\n             TransferToken(\n                 pools[Investors[_id].Poolid].Token,\n                 Investors[_id].InvestorAddress,\n-                Investors[_id].TokensOwn\n+                temp\n             );\n             pools[Investors[_id].Poolid].UnlockedTokens = SafeMath.add(\n                 pools[Investors[_id].Poolid].UnlockedTokens,\n-                Investors[_id].TokensOwn\n+                temp\n             );\n-            Investors[_id].TokensOwn = 0;\n+\n             return true;\n         }\n         return false;", "project_link": "https://github.com/The-Poolz/Poolz-Back/commit/7577f9304c29797e58bdb9af3f6e6b34bf654545", "solc_version": "0.8.13", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "b86fb64feb3ddcc5f76d4db25946f88188832746"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "7577f9304c29797e58bdb9af3f6e6b34bf654545"}}