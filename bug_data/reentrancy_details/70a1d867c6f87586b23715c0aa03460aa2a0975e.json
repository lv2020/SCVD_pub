{"filename": "contracts/managers/SherlockClaimManager.sol", "patch": "@@ -537,7 +537,7 @@ contract SherlockClaimManager is ISherlockClaimManager, ReentrancyGuard, Manager\n   // Once requestAndProposePriceFor() is executed in UMA's contracts, this function gets called\n   // We change the claim's state from UmaPriceProposed to ReadyToProposeUmaDispute\n   // Then, the next callback in the process, disputePriceFor(), gets called by the UMA's contract.\n-  // @note reentrancy is allowed for this call\n+  // @note Does not have reentrancy protection because it is called by the OO contract which is non-reentrant.\n   function priceProposed(\n     bytes32 identifier,\n     uint32 timestamp,\n@@ -560,7 +560,7 @@ contract SherlockClaimManager is ISherlockClaimManager, ReentrancyGuard, Manager\n   // Once disputePriceFor() is executed in UMA's contracts, this function gets called\n   // We change the claim's state from UmaDisputeProposed to UmaPending\n   // Then, the next callback in the process, priceSettled(), gets called by the UMA's contract.\n-  // @note reentrancy is allowed for this call\n+  // @note Does not have reentrancy protection because it is called by the OO contract which is non-reentrant.\n   function priceDisputed(\n     bytes32 identifier,\n     uint32 timestamp,", "project_link": "https://github.com/sherlock-protocol/sherlock-v2-core/commit/70a1d867c6f87586b23715c0aa03460aa2a0975e", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "dffbdfd31809ed65eb5172ee3eee1c9b2fbd5ad5"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "70a1d867c6f87586b23715c0aa03460aa2a0975e"}}