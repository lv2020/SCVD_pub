{"filename": "packages/core/contracts/oracle/implementation/SkinnyOptimisticOracle.sol", "patch": "@@ -300,7 +300,7 @@ contract SkinnyOptimisticOracle is SkinnyOptimisticOracleInterface, Testable, Lo\n         uint256 customLiveness,\n         address proposer,\n         int256 proposedPrice\n-    ) external override returns (uint256 totalBond) {\n+    ) external override nonReentrant() returns (uint256 totalBond) {\n         bytes32 requestId = _getId(msg.sender, identifier, timestamp, ancillaryData);\n         require(requests[requestId] == bytes32(0), \"Request already initialized\");\n         require(proposer != address(0), \"proposer address must be non 0\");", "project_link": "https://github.com/UMAprotocol/protocol/commit/a9e3fc7ef6aa00cc1f093d89305a351a0af09407", "solc_version": "0.8.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "4f315a69402b0d5e1804ce2cb53db5d6ace0e7e6"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "a9e3fc7ef6aa00cc1f093d89305a351a0af09407"}}