{"filename": "contracts/BsktToken.sol", "patch": "@@ -1,6 +1,7 @@\n pragma solidity 0.4.21;\n \n \n+import \"zeppelin-solidity/contracts/ReentrancyGuard.sol\";\n import \"zeppelin-solidity/contracts/lifecycle/Pausable.sol\";\n import \"zeppelin-solidity/contracts/math/SafeMath.sol\";\n import \"zeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\";\n@@ -31,7 +32,7 @@ library AddressArrayUtils {\n /// anyone. To create, a user must approve the contract to move the underlying\n /// tokens, then call `create`.\n /// @author Cryptofin\n-contract BsktToken is StandardToken, DetailedERC20, Pausable {\n+contract BsktToken is StandardToken, DetailedERC20, Pausable, ReentrancyGuard {\n     using SafeMath for uint256;\n     using AddressArrayUtils for address[];\n \n@@ -71,7 +72,7 @@ contract BsktToken is StandardToken, DetailedERC20, Pausable {\n         string _name,\n         string _symbol\n     ) DetailedERC20(_name, _symbol, 18) public {\n-        require(0 < addresses.length && addresses.length < 256);\n+        require(addresses.length > 0);\n         require(addresses.length == quantities.length);\n         require(_creationUnit >= 1);\n \n@@ -210,6 +211,7 @@ contract BsktToken is StandardToken, DetailedERC20, Pausable {\n     function withdrawExcessToken(address token)\n         external\n         onlyOwner\n+        nonReentrant\n     {\n         ERC20 erc20 = ERC20(token);\n         uint256 withdrawAmount;", "project_link": "https://github.com/cryptofinlabs/bskt/commit/d58ea7b26251318de9a8fdca0f601182fce13391", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "674a1ffc134e6e600a66e773bac2cbb6265dc722"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "d58ea7b26251318de9a8fdca0f601182fce13391"}}