{"filename": "contracts/Holdefi.sol", "patch": "@@ -3,6 +3,7 @@ pragma solidity 0.6.12;\n pragma experimental ABIEncoderV2;\r\n \r\n import \"@openzeppelin/contracts/math/SafeMath.sol\";\r\n+import \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n import \"./HoldefiPausableOwnable.sol\";\r\n import \"./HoldefiCollaterals.sol\";\r\n \r\n@@ -77,7 +78,7 @@ interface HoldefiSettingsInterface {\n ///\t\tE15: Sender should be Holdefi Settings contract\r\n ///\t\tE16: There is not enough collateral\r\n ///\t\tE17: Amount should be less than the market debt\r\n-contract Holdefi is HoldefiPausableOwnable {\r\n+contract Holdefi is HoldefiPausableOwnable, ReentrancyGuard {\r\n \r\n \tusing SafeMath for uint256;\r\n \r\n@@ -1091,6 +1092,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform supply operation\r\n \tfunction supplyInternal(address account, address market, uint256 amount, uint16 referralCode)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"supply\")\r\n \t\tmarketIsActive(market)\r\n \t{\r\n@@ -1123,6 +1125,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform withdraw supply operation\r\n \tfunction withdrawSupplyInternal (address account, address market, uint256 amount) \r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"withdrawSupply\")\r\n \t{\r\n \t\tMarketData memory supplyData;\r\n@@ -1135,24 +1138,22 @@ contract Holdefi is HoldefiPausableOwnable {\n \t\t\ttransferAmount = totalSuppliedBalance;\r\n \t\t}\r\n \r\n-\t\tuint256 remaining = 0;\r\n \t\tif (transferAmount <= supplyData.interest) {\r\n \t\t\tsupplyData.interest = supplyData.interest.sub(transferAmount);\r\n \t\t}\r\n \t\telse {\r\n-\t\t\tremaining = transferAmount.sub(supplyData.interest);\r\n+\t\t\tuint256 remaining = transferAmount.sub(supplyData.interest);\r\n \t\t\tsupplyData.interest = 0;\r\n \t\t\tsupplyData.balance = supplyData.balance.sub(remaining);\r\n+\r\n+\t\t\tbeforeChangeSupplyRate(market);\r\n+\t\t\tmarketAssets[market].totalSupply = marketAssets[market].totalSupply.sub(remaining);\t\r\n \t\t}\r\n \r\n \t\tsupplies[account][market].balance = supplyData.balance;\r\n \t\tsupplies[account][market].accumulatedInterest = supplyData.interest;\r\n \t\tsupplies[account][market].lastInterestIndex = supplyData.currentIndex;\r\n \r\n-\t\tbeforeChangeSupplyRate(market);\r\n-\t\t\r\n-\t\tmarketAssets[market].totalSupply = marketAssets[market].totalSupply.sub(remaining);\t\r\n-\t\t\r\n \t\ttransferFromHoldefi(msg.sender, market, transferAmount);\r\n \t\r\n \t\temit WithdrawSupply(\r\n@@ -1169,6 +1170,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform collateralize operation\r\n \tfunction collateralizeInternal (address account, address collateral, uint256 amount)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"collateralize\")\r\n \t\tcollateralIsActive(collateral)\r\n \t{\r\n@@ -1189,6 +1191,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform withdraw collateral operation\r\n \tfunction withdrawCollateralInternal (address account, address collateral, uint256 amount) \r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"withdrawCollateral\")\r\n \t{\r\n \t\t(uint256 balance,, uint256 borrowPowerValue, uint256 totalBorrowValue,) =\r\n@@ -1223,6 +1226,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform borrow operation\r\n \tfunction borrowInternal (address account, address market, address collateral, uint256 amount, uint16 referralCode)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"borrow\")\r\n \t\tmarketIsActive(market)\r\n \t\tcollateralIsActive(collateral)\r\n@@ -1264,6 +1268,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform repay borrow operation\r\n \tfunction repayBorrowInternal (address account, address market, address collateral, uint256 amount)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"repayBorrow\")\r\n \t{\r\n \t\tMarketData memory borrowData;\r\n@@ -1273,34 +1278,32 @@ contract Holdefi is HoldefiPausableOwnable {\n \t\tuint256 totalBorrowedBalance = borrowData.balance.add(borrowData.interest);\r\n \t\trequire (totalBorrowedBalance != 0, \"E09\");\r\n \r\n-\t\tuint256 transferAmount = amount;\r\n+\t\tuint256 transferAmount = transferFromSender(address(this), market, amount);\r\n+\t\tuint256 extra = 0;\r\n \t\tif (transferAmount > totalBorrowedBalance) {\r\n+\t\t\textra = transferAmount.sub(totalBorrowedBalance);\r\n \t\t\ttransferAmount = totalBorrowedBalance;\r\n-\t\t\tif (market == ethAddress) {\r\n-\t\t\t\tuint256 extra = amount.sub(transferAmount);\r\n-\t\t\t\ttransferFromHoldefi(msg.sender, ethAddress, extra);\r\n-\t\t\t}\r\n \t\t}\r\n-\t\t\r\n-\t\ttransferAmount = transferFromSender(address(this), market, transferAmount);\r\n \r\n-\t\tuint256 remaining = 0;\r\n \t\tif (transferAmount <= borrowData.interest) {\r\n \t\t\tborrowData.interest = borrowData.interest.sub(transferAmount);\r\n \t\t}\r\n \t\telse {\r\n-\t\t\tremaining = transferAmount.sub(borrowData.interest);\r\n+\t\t\tuint256 remaining = transferAmount.sub(borrowData.interest);\r\n \t\t\tborrowData.interest = 0;\r\n \t\t\tborrowData.balance = borrowData.balance.sub(remaining);\r\n+\r\n+\t\t\tbeforeChangeSupplyRate(market);\r\n+\t\t\tmarketAssets[market].totalBorrow = marketAssets[market].totalBorrow.sub(remaining);\t\r\n \t\t}\r\n \t\tborrows[account][collateral][market].balance = borrowData.balance;\r\n \t\tborrows[account][collateral][market].accumulatedInterest = borrowData.interest;\r\n \t\tborrows[account][collateral][market].lastInterestIndex = borrowData.currentIndex;\r\n \t\tcollaterals[account][collateral].lastUpdateTime = block.timestamp;\r\n \r\n-\t\tbeforeChangeSupplyRate(market);\r\n-\t\t\r\n-\t\tmarketAssets[market].totalBorrow = marketAssets[market].totalBorrow.sub(remaining);\t\r\n+\t\tif (extra > 0) {\r\n+\t\t\ttransferFromHoldefi(msg.sender, market, extra);\r\n+\t\t}\r\n \r\n \t\temit RepayBorrow (\r\n \t\t\tmsg.sender,\r\n@@ -1317,6 +1320,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform buy liquidated collateral operation\r\n \tfunction buyLiquidatedCollateralInternal (address market, address collateral, uint256 marketAmount)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\twhenNotPaused(\"buyLiquidatedCollateral\")\r\n \t{\r\n \t\tuint256 transferAmount = transferFromSender(address(this), market, marketAmount);\r\n@@ -1336,6 +1340,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform deposit promotion reserve operation\r\n \tfunction depositPromotionReserveInternal (address market, uint256 amount)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\tmarketIsActive(market)\r\n \t{\r\n \t\tuint256 transferAmount = transferFromSender(address(this), market, amount);\r\n@@ -1351,6 +1356,7 @@ contract Holdefi is HoldefiPausableOwnable {\n \t/// @notice Perform deposit liquidation reserve operation\r\n \tfunction depositLiquidationReserveInternal (address collateral, uint256 amount)\r\n \t\tinternal\r\n+\t\tnonReentrant\r\n \t\tcollateralIsActive(collateral)\r\n \t{\r\n \t\tuint256 transferAmount = transferFromSender(address(holdefiCollaterals), collateral, amount);\r", "project_link": "https://github.com/holdefi/Holdefi/commit/c0b8de07cc073d39ddbcc32a9e094af0e0bc51a6", "solc_version": "0.4.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "a87774c742818073e088df67cfa5662599082300"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "c0b8de07cc073d39ddbcc32a9e094af0e0bc51a6"}}