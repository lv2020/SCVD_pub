{"filename": "packages/trade/exchange-token-account/contracts/TokenAccount.sol", "patch": "@@ -3,13 +3,14 @@ pragma solidity ^0.8.0;\n \n import \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\n import \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\n+import \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n \n import './Common.sol';\n \n-contract TokenAccount is IERC1155Receiver, CommonConstants {\n+contract TokenAccount is ReentrancyGuard, IERC1155Receiver, CommonConstants {\n     address private wallet;\n \n-    constructor(address _wallet) {\n+    constructor(address _wallet) nonReentrant {\n         wallet = _wallet;\n     }\n \n@@ -19,7 +20,7 @@ contract TokenAccount is IERC1155Receiver, CommonConstants {\n         uint256 id,\n         uint256 value,\n         bytes calldata data\n-    ) external override returns (bytes4) {\n+    ) external override nonReentrant returns (bytes4) {\n         IERC1155(msg.sender).safeTransferFrom(address(this), wallet, id, value, data);\n \n         return ERC1155_ACCEPTED;\n@@ -31,7 +32,7 @@ contract TokenAccount is IERC1155Receiver, CommonConstants {\n         uint256[] calldata ids,\n         uint256[] calldata values,\n         bytes calldata data\n-    ) external override returns (bytes4) {\n+    ) external override nonReentrant returns (bytes4) {\n         IERC1155(msg.sender).safeBatchTransferFrom(address(this), wallet, ids, values, data);\n \n         return ERC1155_BATCH_ACCEPTED;", "project_link": "https://github.com/energywebfoundation/origin/commit/636f7e9bf51943b984b8fd4139dc5282ee204439", "solc_version": "0.8.13", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "de18150b0235c7a9fbfc791031c42a9133fe9847"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "636f7e9bf51943b984b8fd4139dc5282ee204439"}}