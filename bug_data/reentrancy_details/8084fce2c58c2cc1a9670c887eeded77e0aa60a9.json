{"filename": "contracts/staking/fuse/FuseStaking.sol", "patch": "@@ -299,13 +299,14 @@ contract FuseStaking is\n \t\t\t\n       if (totalAmount < targetAmount) {\n         if (totalAmount > 0) {\n+          totalAmount = 0;\n \t\t\t\t  goodDollar.transfer(gdAcceptingFaucets[i], totalAmount);\n         }\n \n         break;\n \t\t\t} else {\n+        totalAmount -= targetAmount;\n         goodDollar.transfer(gdAcceptingFaucets[i], targetAmount);\n-\t\t\t\ttotalAmount -= targetAmount;\n \t\t\t}\n       // TODO: check if queryBalance is necessary, and if it updates call it update\n \t\t\tspendingRateOracle.queryBalance(\n@@ -328,12 +329,14 @@ contract FuseStaking is\n \t\t\t\n       if (totalAmount < targetAmount) {\n         if (totalAmount > 0) {\n+          totalAmount = 0;\n \t\t\t\t  goodDollar.transfer(fuseAcceptingFaucets[i], totalAmount);\n         }\n \n         break;\n \t\t\t} else {\n \t\t\t\ttotalAmount -= targetAmount;\n+        goodDollar.transfer(fuseAcceptingFaucets[i], targetAmount);\n \t\t\t}\n       // TODO: check if queryBalance is necessary, and if it updates call it update\n \t\t\tspendingRateOracle.queryBalance(\n@@ -349,7 +352,7 @@ contract FuseStaking is\n \t/**\n \t * @dev This function allows anyone to force calculation of their UBI in GoodDollars.\n \t */\n-\tfunction collectUBIInterest() external {\n+\tfunction collectUBIInterest() external nonReentrant {\n \t\t// getting current day number to pass in the event\n \t\tuint256 currentDayNumber = _checkIfCalledOnceInDayAndReturnDay();\n ", "project_link": "https://github.com/GoodDollar/GoodProtocol/commit/a658b592b94772f663311e62dbe5a35d7cf41206", "solc_version": "0.5.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "8084fce2c58c2cc1a9670c887eeded77e0aa60a9"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "a658b592b94772f663311e62dbe5a35d7cf41206"}}