{"filename": "contracts/iBNB.sol", "patch": "@@ -58,6 +58,8 @@ contract iBNB is Ownable {\n     uint16[5] public selling_taxes_tranches = [125, 250, 500, 750, 1000]; // % and div by 10**4 0.0125% -0.025% -(...)\n \n     bool public circuit_breaker;\n+    bool private liq_swap_reentrancy_guard;\n+    bool private reward_swap_reentrancy_guard;\n \n     string private _name = \"iBNB\";\n     string private _symbol = \"iBNB\";\n@@ -257,14 +259,18 @@ contract iBNB is Ownable {\n \n         prop_balances memory _balancer_balances = balancer_balances;\n \n-        if(_balancer_balances.liquidity_pool >= swap_for_liquidity_threshold) {\n+        if(_balancer_balances.liquidity_pool >= swap_for_liquidity_threshold && !liq_swap_reentrancy_guard) {\n+            liq_swap_reentrancy_guard = true;\n             uint256 token_out = addLiquidity(_balancer_balances.liquidity_pool);\n             balancer_balances.liquidity_pool -= token_out; //not balanceOf, in case addLiq revert\n+            liq_swap_reentrancy_guard = false;\n         }\n \n-        if(_balancer_balances.reward_pool >= swap_for_reward_threshold) {\n+        if(_balancer_balances.reward_pool >= swap_for_reward_threshold && !reward_swap_reentrancy_guard) {\n+            reward_swap_reentrancy_guard = true;\n             uint256 token_out = swapForBNB(_balancer_balances.reward_pool, address(this));\n             balancer_balances.reward_pool -= token_out;\n+            reward_swap_reentrancy_guard = false;\n         }\n \n         emit BalancerPools(_balancer_balances.liquidity_pool, _balancer_balances.reward_pool);", "project_link": "https://github.com/drgorillamd/Token/commit/3e2b1f588aefbf800d73fb28c9abd299e8b58e4a", "solc_version": "0.8.5", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "12ca42374ddf4a1f8d7dfcdefd8c1a92e7d9d079"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "3e2b1f588aefbf800d73fb28c9abd299e8b58e4a"}}