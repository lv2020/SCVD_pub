{"filename": "08. Security-in-Contracts-and-Unit-Testing/examples/reentrancy_fixed.sol", "patch": "@@ -0,0 +1,37 @@\n+pragma solidity 0.4.21;\n+\n+contract HoneyPot {\n+    mapping(address => uint) public balances;\n+    \n+    mapping(address => bool) public approvedMembers;\n+    \n+    function HoneyPot(address[] members) public {\n+        for(uint i=0; i<members.length; i++){\n+            approvedMembers[members[i]] = true;\n+        }\n+    }\n+    \n+    function put() public payable {\n+        balances[msg.sender] += msg.value;\n+    }\n+    \n+    function get(uint value) public {\n+        //checks\n+        require(approvedMembers[msg.sender]);\n+        require(value <= balances[msg.sender]);\n+        \n+        //effects\n+        balances[msg.sender] -= value;\n+        \n+        //interactions\n+        require(msg.sender.call.value(value)());\n+    }\n+    \n+    function bal() public view returns (uint) {\n+        return address(this).balance;\n+    }\n+    \n+    function() public {\n+        require(false);\n+    }\n+}", "project_link": "https://github.com/grozdanovgg/SolidityCourse/commit/76abbb95518f3943719a15d1753da5121ed4d36b", "bug_version": {"raw_code": "", "commit_id": "d8099524be0683ba7a237cdcf968ed49c62a7724"}, "fixed_version": {"raw_code": "", "commit_id": "76abbb95518f3943719a15d1753da5121ed4d36b"}}