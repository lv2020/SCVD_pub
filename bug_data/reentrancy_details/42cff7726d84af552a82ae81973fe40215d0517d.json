{"filename": "contracts/MarketMaker.sol", "patch": "@@ -190,29 +190,38 @@ contract MarketMaker is Ownable, ERC1155TokenReceiver {\n             splitPositionThroughAllConditions(uint(outcomeTokenNetCost));\n         }\n \n+        bool touched = false;\n+        uint[] memory transferAmounts = new uint[](atomicOutcomeSlotCount);\n         for (uint i = 0; i < atomicOutcomeSlotCount; i++) {\n-            if(outcomeTokenAmounts[i] != 0) {\n-                uint positionId = generateAtomicPositionId(i);\n-                if(outcomeTokenAmounts[i] < 0) {\n-                    pmSystem.safeTransferFrom(msg.sender, address(this), positionId, uint(-outcomeTokenAmounts[i]), \"\");\n-                } else {\n-                    pmSystem.safeTransferFrom(address(this), msg.sender, positionId, uint(outcomeTokenAmounts[i]), \"\");\n-                }\n-\n+            if(outcomeTokenAmounts[i] < 0) {\n+                touched = true;\n+                // This is safe since\n+                // 0x8000000000000000000000000000000000000000000000000000000000000000 ==\n+                // uint(-int(-0x8000000000000000000000000000000000000000000000000000000000000000))\n+                transferAmounts[i] = uint(-outcomeTokenAmounts[i]);\n             }\n         }\n+        if(touched) pmSystem.safeBatchTransferFrom(msg.sender, address(this), positionIds, transferAmounts, \"\");\n \n         if(outcomeTokenNetCost < 0) {\n-            // This is safe since\n-            // 0x8000000000000000000000000000000000000000000000000000000000000000 ==\n-            // uint(-int(-0x8000000000000000000000000000000000000000000000000000000000000000))\n             mergePositionsThroughAllConditions(uint(-outcomeTokenNetCost));\n             if(netCost < 0) {\n                 require(collateralToken.transfer(msg.sender, uint(-netCost)));\n             }\n         }\n \n         emit AMMOutcomeTokenTrade(msg.sender, outcomeTokenAmounts, outcomeTokenNetCost, uint(fees));\n+\n+        touched = false;\n+        for (uint i = 0; i < atomicOutcomeSlotCount; i++) {\n+            if(outcomeTokenAmounts[i] > 0) {\n+                touched = true;\n+                transferAmounts[i] = uint(outcomeTokenAmounts[i]);\n+            } else {\n+                transferAmounts[i] = 0;\n+            }\n+        }\n+        if(touched) pmSystem.safeBatchTransferFrom(address(this), msg.sender, positionIds, transferAmounts, \"\");\n     }\n \n     /// @dev Calculates fee to be paid to market maker", "project_link": "https://github.com/gnosis/conditional-tokens-market-makers/commit/42cff7726d84af552a82ae81973fe40215d0517d", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "08db0785bd20f06f59bc13c6d1c166e277940ba2"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "42cff7726d84af552a82ae81973fe40215d0517d"}}