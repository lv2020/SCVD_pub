{"filename": "exercise3/contracts/Etherbank.sol", "patch": "@@ -13,8 +13,8 @@ contract EtherBank {\n     \n   function withdraw(uint amount) public {\n     if (balances[msg.sender]>= amount) {\n-      require(msg.sender.call.value(amount)());\n       balances[msg.sender] -= amount;\n+      require(msg.sender.call.value(amount)()); //sending money\n     }\n   }  \n   ", "project_link": "https://github.com/zcstarr/devcon4-playground/commit/432af76ad0aa80c3c995bd4821394b0359023549", "bug_version": {"raw_code": "pragma solidity ^0.4.19;\n\ncontract EtherBank {\n  mapping (address => uint) public balances;\n  \n  function EtherBank() public  payable{\n      require(msg.value == 10 ether);\n  }\n    \n  function deposit(address to) payable public {\n    balances[to] += msg.value;\n  }\n    \n  function withdraw(uint amount) public {\n    if (balances[msg.sender]>= amount) {\n      require(msg.sender.call.value(amount)());\n      balances[msg.sender] -= amount;\n    }\n  }  \n  \n  function challengeSolved() public view returns(bool){\n    if (this.balance < 1 ether){\n        return true;\n    }\n    return false;\n  }\n  \n  function() payable public  {\n    balances[msg.sender] += msg.value;\n  }\n\n  function getBalance(address addr) view public returns(uint){\n    return balances[addr];\n  }\n  \n  function getBankBalance() view public returns(uint){\n    return this.balance;\n  }\n}\n", "flattened_code": "pragma solidity ^0.4.19;\n\ncontract EtherBank {\n  mapping (address => uint) public balances;\n  \n  function EtherBank() public  payable{\n      require(msg.value == 10 ether);\n  }\n    \n  function deposit(address to) payable public {\n    balances[to] += msg.value;\n  }\n    \n  function withdraw(uint amount) public {\n    if (balances[msg.sender]>= amount) {\n      require(msg.sender.call.value(amount)());\n      balances[msg.sender] -= amount;\n    }\n  }  \n  \n  function challengeSolved() public view returns(bool){\n    if (this.balance < 1 ether){\n        return true;\n    }\n    return false;\n  }\n  \n  function() payable public  {\n    balances[msg.sender] += msg.value;\n  }\n\n  function getBalance(address addr) view public returns(uint){\n    return balances[addr];\n  }\n  \n  function getBankBalance() view public returns(uint){\n    return this.balance;\n  }\n}\n", "commit_id": "8a1f2f17550dc45548284653bb3133c426737f28"}, "fixed_version": {"raw_code": "pragma solidity ^0.4.19;\n\ncontract EtherBank {\n  mapping (address => uint) public balances;\n  \n  function EtherBank() public  payable{\n      require(msg.value == 10 ether);\n  }\n    \n  function deposit(address to) payable public {\n    balances[to] += msg.value;\n  }\n    \n  function withdraw(uint amount) public {\n    if (balances[msg.sender]>= amount) {\n      balances[msg.sender] -= amount;\n      require(msg.sender.call.value(amount)()); //sending money\n    }\n  }  \n  \n  function challengeSolved() public view returns(bool){\n    if (this.balance < 1 ether){\n        return true;\n    }\n    return false;\n  }\n  \n  function() payable public  {\n    balances[msg.sender] += msg.value;\n  }\n\n  function getBalance(address addr) view public returns(uint){\n    return balances[addr];\n  }\n  \n  function getBankBalance() view public returns(uint){\n    return this.balance;\n  }\n}\n", "flattened_code": "pragma solidity ^0.4.19;\n\ncontract EtherBank {\n  mapping (address => uint) public balances;\n  \n  function EtherBank() public  payable{\n      require(msg.value == 10 ether);\n  }\n    \n  function deposit(address to) payable public {\n    balances[to] += msg.value;\n  }\n    \n  function withdraw(uint amount) public {\n    if (balances[msg.sender]>= amount) {\n      balances[msg.sender] -= amount;\n      require(msg.sender.call.value(amount)()); //sending money\n    }\n  }  \n  \n  function challengeSolved() public view returns(bool){\n    if (this.balance < 1 ether){\n        return true;\n    }\n    return false;\n  }\n  \n  function() payable public  {\n    balances[msg.sender] += msg.value;\n  }\n\n  function getBalance(address addr) view public returns(uint){\n    return balances[addr];\n  }\n  \n  function getBankBalance() view public returns(uint){\n    return this.balance;\n  }\n}\n", "commit_id": "432af76ad0aa80c3c995bd4821394b0359023549"}}