{"filename": "smartcontract/contracts/GiftNFTCard.sol", "patch": "@@ -86,7 +86,7 @@ contract GiftNFTCard is\n         uint256 minValue = minGiftValue + minMintFee;\n \n         require(\n-            msg.value > minValue,\n+            msg.value >= minValue,\n             \"GiftNFTCard: gift card needs to have at least 0.1 Metis + mint fees\"\n         );\n \n@@ -189,18 +189,19 @@ contract GiftNFTCard is\n     function _unwrapGiftCardAndDisburse(GiftCard memory gift, address owner)\n         private\n     {\n+        uint256 giftAmount = gift.amount;\n         require(\n             gift.isUnwrapped == false,\n             \"GiftNFTCard: cannot unwrap already unwrapped gift card\"\n         );\n+        // The gift is unwrapped now. Do not allow the same gift to redeem the amount again.\n+        _giftMap[gift.tokenId].isUnwrapped = true;\n+        _giftMap[gift.tokenId].amount = 0;\n \n         address payable sender = payable(owner);\n         // Send the gift amount to the caller.\n-        (bool sent, ) = sender.call{value: gift.amount}(\"\");\n+        (bool sent, ) = sender.call{value: giftAmount}(\"\");\n         require(sent, \"GiftNFTCard: failed to unwrap gift card\");\n-\n-        // The gift is unwrapped now. Do not allow the same gift to redeem the amount again.\n-        _giftMap[gift.tokenId].isUnwrapped = true;\n     }\n \n     /// Unwraps the amount stored in the gift card and withdraws it in the owner's wallet.\n@@ -253,12 +254,11 @@ contract GiftNFTCard is\n     function withdrawFees() public onlyOwner {\n         uint256 unwithdrawnFees = _totalFees - _totalFeesWithdrawn;\n         require(unwithdrawnFees > 0, \"GiftNFTCard: no fees to withdraw yet\");\n+        // Reset the withdrawn amount to full.\n+        _totalFeesWithdrawn = _totalFees;\n \n         (bool sent, ) = payable(msg.sender).call{value: unwithdrawnFees}(\"\");\n         require(sent, \"GiftNFTCard: failed to withdraw fees\");\n-\n-        // Reset the withdrawn amount to full.\n-        _totalFeesWithdrawn = _totalFees;\n     }\n \n     /// Recover the owner of the gift card from the signature.", "project_link": "https://github.com/pepsighan/giftnft.cards/commit/e34113b76b1295a8131ca1eb5ca35f7a23a728a3", "solc_version": "0.8.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "3663d16bc9df062845263aed9ec59c5f880ddccb"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "e34113b76b1295a8131ca1eb5ca35f7a23a728a3"}}