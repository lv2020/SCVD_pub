{"filename": "modifier_reentrancy_fixed.sol", "patch": "@@ -1,33 +0,0 @@\n-pragma solidity ^0.7.3;\n-\n-contract ModifierEntrancy {\n-  mapping (address => uint) public tokenBalance;\n-  string constant name = \"Nu Token\";\n-  Bank bank;\n-  constructor() public{\n-      bank = new Bank();\n-  }\n-\n-  //If a contract has a zero balance and supports the token give them some token\n-  function airDrop() supportsToken hasNoBalance  public{ // In the fixed version supportsToken comes before hasNoBalance\n-    tokenBalance[msg.sender] == 0;\n-  }\n-\n-  //Checks that the contract responds the way we want\n-  modifier supportsToken() {\n-    require(keccak256(abi.encodePacked(\"Nu Token\")) == bank.supportsToken());\n-    _;\n-  }\n-  //Checks that the caller has a zero balance\n-  modifier hasNoBalance {\n-      require(tokenBalance[msg.sender] == 20);\n-      _;\n-  }\n-}\n-\n-contract Bank{\n-\n-    function supportsToken() external returns(bytes32){\n-        return(keccak256(abi.encodePacked(\"Nu Token\")));\n-    }\n-}\n\\ No newline at end of file", "project_link": "https://github.com/delixus-rengasamy/solidity-react/commit/7c69c644356c3b6cde2b27b817a3947addd8ec03", "bug_version": {"raw_code": "pragma solidity ^0.7.3;\n\ncontract ModifierEntrancy {\n  mapping (address => uint) public tokenBalance;\n  string constant name = \"Nu Token\";\n  Bank bank;\n  constructor() public{\n      bank = new Bank();\n  }\n\n  //If a contract has a zero balance and supports the token give them some token\n  function airDrop() supportsToken hasNoBalance  public{ // In the fixed version supportsToken comes before hasNoBalance\n    tokenBalance[msg.sender] == 0;\n  }\n\n  //Checks that the contract responds the way we want\n  modifier supportsToken() {\n    require(keccak256(abi.encodePacked(\"Nu Token\")) == bank.supportsToken());\n    _;\n  }\n  //Checks that the caller has a zero balance\n  modifier hasNoBalance {\n      require(tokenBalance[msg.sender] == 20);\n      _;\n  }\n}\n\ncontract Bank{\n\n    function supportsToken() external returns(bytes32){\n        return(keccak256(abi.encodePacked(\"Nu Token\")));\n    }\n}", "commit_id": "502d4668cf26faac7b05c8452a6c12575817e2e6"}, "fixed_version": {"raw_code": "", "commit_id": "7c69c644356c3b6cde2b27b817a3947addd8ec03"}}