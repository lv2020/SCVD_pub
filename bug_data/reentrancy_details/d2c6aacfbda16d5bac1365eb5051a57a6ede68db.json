{"filename": "contracts/contracts/DeFund.sol", "patch": "@@ -39,7 +39,6 @@ contract DeFund is /*ChainlinkClient, KeeperCompatibleInterface,*/ Ownable {\n \n     /* Deposit funds to the contract */\n     function depositFunds(uint _amount, address _tokenAddress) external payable {\n-        // TODO reentrancy\n         require(_amount > 0, \"Cannot deposit 0\");\n         if (_tokenAddress == address(0)) {\n             // ETH deposit\n@@ -60,14 +59,14 @@ contract DeFund is /*ChainlinkClient, KeeperCompatibleInterface,*/ Ownable {\n         uint currentBalance = s_userBalances[msg.sender][_tokenAddress];\n         require(_amount <= currentBalance, \"Sorry, can't withdraw more than you have in your account :)\");\n \n+        s_userBalances[msg.sender][_tokenAddress] = currentBalance - _amount;\n+\n         if (_tokenAddress == address(0)) {\n             payable(msg.sender).transfer(_amount);\n         } else {\n             // TODO\n             IERC20(_tokenAddress).transfer(msg.sender, _amount);\n         }\n-\n-        s_userBalances[msg.sender][_tokenAddress] = currentBalance - _amount;\n     }\n \n     /* Add a new token to the list allowed for deposits and withdrawals */", "project_link": "https://github.com/web3bits/defund/commit/d2c6aacfbda16d5bac1365eb5051a57a6ede68db", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "6570ba9f4f11ad7fe4faa6f9da05d48c51d39fdd"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "d2c6aacfbda16d5bac1365eb5051a57a6ede68db"}}