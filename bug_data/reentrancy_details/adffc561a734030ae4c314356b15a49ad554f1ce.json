{"filename": "contracts/EtherStoreReentrancyProof.sol", "patch": "@@ -0,0 +1,30 @@\n+pragma solidity ^0.6.10;\n+\n+contract EtherStoreReentrancyProof {\n+    mapping(address => uint256) public balances;\n+\n+    function deposit() public payable {\n+        balances[msg.sender] += msg.value;\n+    }\n+\n+    modifier noReentrant() {\n+        // adding a modifier to lock contract\n+        // while functions are being run\n+        require(!locked, \"No re-entrancy\");\n+        locked = true;\n+        _;\n+        locked = false;\n+    }\n+\n+    function withdraw(uint256 _amount) public noReentrant {\n+        require(balances[msg.sender] >= _amount);\n+        // Update balance before you actually move the ether around\n+        balances[msg.sender] -= _amount;\n+        (bool sent, ) = msg.sender.call{value: _amount}(\"\");\n+        require(sent, \"Failed to send Ether\");\n+    }\n+\n+    function getBalance() public view returns (uint256) {\n+        return address(this).balance;\n+    }\n+}", "project_link": "https://github.com/mehranhydary/solidity-reentrancy/commit/adffc561a734030ae4c314356b15a49ad554f1ce", "bug_version": {"raw_code": "", "commit_id": "64441b868b8bf168db8e5a772fd80627063bf5fd"}, "fixed_version": {"raw_code": "pragma solidity ^0.6.10;\n\ncontract EtherStoreReentrancyProof {\n    mapping(address => uint256) public balances;\n\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    modifier noReentrant() {\n        // adding a modifier to lock contract\n        // while functions are being run\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function withdraw(uint256 _amount) public noReentrant {\n        require(balances[msg.sender] >= _amount);\n        // Update balance before you actually move the ether around\n        balances[msg.sender] -= _amount;\n        (bool sent, ) = msg.sender.call{value: _amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n", "commit_id": "adffc561a734030ae4c314356b15a49ad554f1ce"}}