{"filename": "contracts/6/token/GrazingRange.sol", "patch": "@@ -65,7 +65,7 @@ contract GrazingRange is OwnableUpgradeSafe, ReentrancyGuardUpgradeSafe  {\n     event AddCampaignInfo(uint256 indexed campaignID, IERC20 stakingToken, IERC20 rewardToken, uint256 startBlock);\n     event AddRewardInfo(uint256 indexed campaignID, uint256 indexed phase, uint256 endBlock, uint256 rewardPerBlock);\n \n-    function initialize() public initializer {\n+    function initialize() external initializer {\n         OwnableUpgradeSafe.__Ownable_init();\n         ReentrancyGuardUpgradeSafe.__ReentrancyGuard_init();\n         rewardInfoLimit = 52; // 52 weeks, 1 year\n@@ -162,18 +162,23 @@ contract GrazingRange is OwnableUpgradeSafe, ReentrancyGuardUpgradeSafe  {\n \n     // @notice View function to see pending Reward on frontend.\n     function pendingReward(uint256 _campaignID, address _user) external view returns (uint256) {\n+        return _pendingReward(_campaignID, userInfo[_campaignID][_user].amount, userInfo[_campaignID][_user].rewardDebt);\n+    }\n+\n+    function _pendingReward(uint256 _campaignID, uint256 _amount, uint256 _rewardDebt) internal view returns (uint256) {\n         CampaignInfo memory campaign = campaignInfo[_campaignID];\n-        UserInfo memory user = userInfo[_campaignID][_user];\n         RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\n         uint256 accRewardPerShare = campaign.accRewardPerShare;\n         if (block.number > campaign.lastRewardBlock && campaign.totalStaked != 0) {\n+            uint256 cursor = campaign.lastRewardBlock;\n             for (uint256 i = 0; i < rewardInfo.length; ++i) {\n-                uint256 multiplier = getMultiplier(campaign.lastRewardBlock, block.number, rewardInfo[i].endBlock);\n+                uint256 multiplier = getMultiplier(cursor, block.number, rewardInfo[i].endBlock);\n                 if (multiplier == 0) continue;\n+                cursor = rewardInfo[i].endBlock;\n                 accRewardPerShare = accRewardPerShare.add(multiplier.mul(rewardInfo[i].rewardPerBlock).mul(1e12).div(campaign.totalStaked));\n             }\n         }\n-        return user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt);\n+        return _amount.mul(accRewardPerShare).div(1e12).sub(_rewardDebt);\n     }\n \n     function updateCampaign(uint256 _campaignID) external nonReentrant {\n@@ -276,7 +281,7 @@ contract GrazingRange is OwnableUpgradeSafe, ReentrancyGuardUpgradeSafe  {\n     }\n \n     // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\n-    function emergencyWithdraw(uint256 _campaignID) external {\n+    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\n         CampaignInfo storage campaign = campaignInfo[_campaignID];\n         UserInfo storage user = userInfo[_campaignID][msg.sender];\n         campaign.stakingToken.safeTransfer(address(msg.sender), user.amount);\n@@ -286,9 +291,10 @@ contract GrazingRange is OwnableUpgradeSafe, ReentrancyGuardUpgradeSafe  {\n     }\n \n     // @notice Withdraw reward. EMERGENCY ONLY.\n-    function emergencyRewardWithdraw(uint256 _campaignID, uint256 _amount, address _beneficiary) external onlyOwner {\n+    function emergencyRewardWithdraw(uint256 _campaignID, uint256 _amount, address _beneficiary) external onlyOwner nonReentrant {\n         CampaignInfo storage campaign = campaignInfo[_campaignID];\n-        require(_amount < campaign.rewardToken.balanceOf(address(this)), \"GrazingRange::emergencyRewardWithdraw::not enough token\");\n+        uint256 currentStakingPendingReward = _pendingReward(_campaignID, campaign.totalStaked, 0);\n+        require(currentStakingPendingReward.add(_amount) <= campaign.rewardToken.balanceOf(address(this)), \"GrazingRange::emergencyRewardWithdraw::not enough reward token\");\n         campaign.rewardToken.safeTransfer(_beneficiary, _amount);\n     }\n }\n\\ No newline at end of file", "project_link": "https://github.com/alpaca-finance/bsc-alpaca-contract/commit/4a24ff344a4e7181e210b9377f49cb6406c46f35", "solc_version": "0.5.0", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "a921751124f5295ceae7eb1828e8ae252349e30f"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "4a24ff344a4e7181e210b9377f49cb6406c46f35"}}