{"filename": "contracts/MixEth.sol", "patch": "@@ -75,6 +75,7 @@ contract MixEth {\n   function withdrawAmt(uint256[12] sig, uint256 indexInShuffle) public {\n     require(Shuffles[shuffleRound-1].shuffle[indexInShuffle] == sig[2] && Shuffles[shuffleRound-1].shuffle[indexInShuffle+1] == sig[3], \"Your public key is not included in the final shuffle!\"); //public key is included in Shuffled\n     require(Shuffles[shuffleRound-1].shuffle[10] == sig[0] && Shuffles[shuffleRound-1].shuffle[11] == sig[1], \"Your signature is using a wrong generator!\"); //shuffling accumulated constant is correct\n+    require(sig[4] == uint(sha3(msg.sender,sig[2],sig[3])), \"Signed an invalid message!\"); //this check is needed to deter front-running attacks\n     require(ECDSAGeneralized.verify(sig), \"Your signature is not verified!\");\n \n     msg.sender.transfer(amt);", "project_link": "https://github.com/seresistvanandras/MixEth/commit/8b73b20a789f5ec55ceff35149ae679875d7d7f2", "solc_version": "0.6.4", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "9c93127f077a361c41bba56ddd1a92a914ccc662"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "8b73b20a789f5ec55ceff35149ae679875d7d7f2"}}