{"filename": "contracts/FrenlyDogs.sol", "patch": "@@ -7,30 +7,28 @@ import \"@openzeppelin/contracts/access/Ownable.sol\";\n import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n import \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n-import \"@openzeppelin/contracts/access/AccessControl.sol\";\n \n import \"hardhat/console.sol\";\n-\n-contract MyNFT is ERC721URIStorage, Ownable, AccessControl {\n+//TODO: Fix 'missing role' on buy\n+contract MyNFT is ERC721URIStorage, Ownable {\n     using SafeERC20 for IERC20;\n     using Counters for Counters.Counter;\n     Counters.Counter private _tokenIds;\n     IERC20 public dog;\n-    // Create a new role identifier for the whitelisted role\n-    bytes32 public constant WHITELISTED_ROLE = keccak256(\"WHITELISTED_ROLE\");\n     uint128 MINTCOST = 6905000000000000000000;\n+    mapping(address => bool) whitelist;\n \n     constructor(address[] memory whitelisted, address dogAddress) ERC721(\"Frenly Dogs\", \"FND\") Ownable() {\n         dog = IERC20(dogAddress);\n-        // Grant the WHITELISTED_ROLE to all addresses in array 'whitelisted'\n+        // Add all addresses in array to whitelist mapping\n         for (uint i=0; i<whitelisted.length; i++) {\n             address whitelistfinal = whitelisted[i];\n             console.log(\"address in whitelist: %s\", whitelistfinal);\n-            _setupRole(WHITELISTED_ROLE, whitelistfinal);\n+            whitelist[whitelistfinal] = true;\n         }\n     }\n \n-    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, AccessControl) returns (bool) {\n+    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721) returns (bool) {\n         return\n             interfaceId == type(IERC721).interfaceId ||\n             interfaceId == type(IERC721Metadata).interfaceId ||\n@@ -53,13 +51,14 @@ contract MyNFT is ERC721URIStorage, Ownable, AccessControl {\n         return newItemId;\n     }\n \n-    function buy() public onlyRole(WHITELISTED_ROLE) {\n+    function buy() public {\n         address sender = _msgSender();\n+        require(whitelist[sender], \"This address is not whitelisted.\");\n         _tokenIds.increment();\n         uint256 newItemId = _tokenIds.current();\n         dog.safeTransferFrom(sender, owner(), MINTCOST);\n         _safeMint(sender, newItemId); \n-        revokeRole(WHITELISTED_ROLE, sender);\n+        whitelist[sender] = false;\n     }\n \n }\n\\ No newline at end of file", "project_link": "https://github.com/mkUltraVictim/FrenlyDogs/commit/307d61bccb855ef97644589b71d6baeb4b0a6b82", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "9554a774e656123776d13e6c5a77ed6650b54526"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "307d61bccb855ef97644589b71d6baeb4b0a6b82"}}