{"filename": "src/core/ElasticDAO.sol", "patch": "@@ -238,9 +238,7 @@ contract ElasticDAO is ReentryProtection {\n         token.m\n       );\n \n-    if (deltaE != msg.value) {\n-      revert('ElasticDAO: Incorrect ETH amount');\n-    }\n+    require(msg.value >= deltaE, 'ElasticDAO: Incorrect ETH amount');\n \n     // mdash\n     uint256 lambdaDash = SafeMath.add(token.maxLambdaPurchase, token.lambda);\n@@ -255,6 +253,13 @@ contract ElasticDAO is ReentryProtection {\n     // tokencontract mint shares\n     bool success = tokenContract.mintShares(msg.sender, token.maxLambdaPurchase);\n     require(success, 'ElasticDAO: Mint Shares Failed during Join');\n+\n+    // return extra ETH\n+    if(success && msg.value > deltaE) {\n+      (success, ) = msg.sender.call{ value: SafeMath.sub(msg.value, deltaE) }('');\n+      require(success, 'ElasticDAO: TransactionFailed');\n+    }\n+\n     emit JoinDAO(msg.sender, token.maxLambdaPurchase, msg.value);\n   }\n ", "project_link": "https://github.com/elasticdao/contracts/commit/8ec8e7ea5199854e2755e249b0773969cee9a3f5", "solc_version": "0.6.4", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "80866784cf6ed5cd6b170e8eab85837ae9799641"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "8ec8e7ea5199854e2755e249b0773969cee9a3f5"}}