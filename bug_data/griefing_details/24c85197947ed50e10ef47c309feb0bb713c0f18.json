{"filename": "gasgriefing_fixed?(slither).sol", "patch": "@@ -10,21 +10,21 @@ contract Relayer {\n \n     mapping (uint => Tx) transactions;\n \n-    function relay(Target target, bytes calldata _data) external returns(bool) {\n+    function relay(Target target, bytes calldata _data, uint _gasLimit) external {\n         // replay protection; do not call the same transaction twice\n         require(!transactions[transactionId].executed, 'same transaction twice');\n         transactions[transactionId].data = _data;\n         transactions[transactionId].executed = true;\n         transactionId += 1;\n-\n-        (bool success, ) = address(target).call(abi.encodeWithSignature(\"execute(bytes)\", _data));\n-        return success;\n+        (bool success,) = address(target).call(abi.encodeWithSignature(\"execute(bytes)\", _data, _gasLimit));\n+        require(success, \"Call relay failed\");\n     }\n }\n \n // Contract called by Relayer\n contract Target {\n-    function execute(bytes calldata _data) external {\n+    function execute(bytes calldata _data, uint _gasLimit) external {\n+        require(gasleft() >= _gasLimit, 'not enough gas');\n         // Execute contract code\n     }\n }", "project_link": "https://github.com/roodysfun/Test-Contracts/commit/10139ca3776c91f46436d4f3b9916ed6a8d9b5c2", "solc_version": "0.6.4", "packages": "", "bug_version": {"raw_code": "", "flattened_code": "", "commit_id": "24c85197947ed50e10ef47c309feb0bb713c0f18"}, "fixed_version": {"raw_code": "", "flattened_code": "", "commit_id": "10139ca3776c91f46436d4f3b9916ed6a8d9b5c2"}}